const logger = require('log4js').getLogger('ChatsService.srv');

const axios = require('axios');
const url = 'https://api.telegram.org/bot';
const apiToken = '1027941776:AAEDWmjmstiGtYpObH3NjN0g9IePgVh-h4E';

const ADMIN_USER_IDS = [938812149];

module.exports = function BotMainCtrl(mainBotService, chatsService, jokesService) {
    this.handleMessages = handleMessages;
    this.startJob = startJob;

    // this.init = init;
    // this.initJob = initJob;
    // this.stopJob = stopJob;

    async function handleMessages(req, res) {
        try {
            const chatId = req.body.message.chat.id;
            const userId = +req.body.message.from.id;
            const firstName = req.body.message.from.first_name;
            const username = req.body.message.from.username;
            const lastName = req.body.message.from.last_name;
            const sentMessage = req.body.message.text;

            logger.info("info message", sentMessage);

            await chatsService.createIfNotExists(chatId, firstName, lastName, userId, username);
            await chatsService.addMessage(chatId, sentMessage);
            if (chatId !== 938812149) {
                await axios.post(`${url}${apiToken}/sendMessage`,
                    {
                        chat_id: 938812149,
                        text: `${username} ’´÷Å ’•’Ø’°’Æ ’∂’°’¥’°’Ø, ${sentMessage}`
                    });
            }


            if (ADMIN_USER_IDS.includes(userId)) {
                return handleAdminQueries();
            }

            if (sentMessage === "/start") {
                return handleInitialCase();
            }

            if (sentMessage.includes('/joke')) {
                return addJokeToReview()
            }

            return unknownCase();

            async function unknownCase() {
                await axios.post(`${url}${apiToken}/sendMessage`,
                    {
                        chat_id: chatId,
                        text: '’Ñ’•’∂÷Ñ ’Ø’Ø’°’∫’∂’æ’•’∂÷Ñ ’Å’•’¶ ’∞’•’ø, ’•’©’• ’Ø’° ’§÷Ä’° ’Ø’°÷Ä’´÷Ñ’∂'
                    });
                return res.status(200).send({statusText: "OK"});
            }

            async function handleInitialCase() {
                await axios.post(`${url}${apiToken}/sendMessage`,
                    {
                        chat_id: chatId,
                        text: `’à’≤’ª’∏÷Ç’µ’∂ ${firstName} üëã,
                    \n‘µ’©’• ÷Å’°’∂’Ø’°’∂’∏÷Ç’¥ ’•÷Ñ ’°’∂’•’Ø’§’∏’ø ’£÷Ä’•’¨ ’°’∫’°, ’ø’•÷Ñ’Ω’ø’´ ’°’º’ª÷á’∏÷Ç’¥ ’£÷Ä’•’¨ /jok ’∏÷Ä’´÷Å ’∞’•’ø’∏ ’¢’∏÷Ç’∂ ’ø’•÷Ñ’ø’∂, ÷Å’°’∂’Ø’°’¨’´ ’ß ’£÷Ä’•’¨ ’∞’°’µ’°’ø’°’º ’ï÷Ä’´’∂’°’Ø ’ù 
                    \n /joke ’Ñ’´’∂’Ω’Ø’´ ’≠’∏÷Ç’¥’¢’∂ ’°’º’°’ª’°÷Ä’Ø’•’¨ ’ß ’≠’°’≤’°’≤’°’∫’°’∞ ÷Ñ’•÷Ä’∏’¢’∂’•÷Ä ’¥’ø÷Å’∂’•’¨ ‘±’¶’£’°’µ’´’∂ ’™’∏’≤’∏’æ÷â
                    \n’Ä’°’≥’•’¨’´ ’™’°’¥’°’∂÷Å ’Å’•’¶÷â`
                    });

                return res.status(200).send({statusText: "OK"});
            }

            async function addJokeToReview() {

                await jokesService.addJokeToReviewedJokesList(sentMessage.replace('/joke', ""), userId, chatId);
                await axios.post(`${url}${apiToken}/sendMessage`,
                    {
                        chat_id: chatId,
                        text: `’à’≤’ª’∏÷Ç’µ’∂ ${firstName} üëã, ’Å’•÷Ä ’°’∂’•’Ø’§’∏’ø’∂ ’Ω’ø’∏÷Ç’£’æ’•’¨’∏÷Ç÷Å ’∞’•’ø’∏ ’Ø÷Å’∏÷Ç÷Å’°’§÷Ä’æ’´ ’¢’∏’¨’∏÷Ä’´’∂`
                    });

                return res.status(200).send({statusText: "OK"});
            }

            async function handleAdminQueries() {
                if (sentMessage.includes("/333")) {
                    await mainBotService.runJob();
                    await axios.post(`${url}${apiToken}/sendMessage`,
                        {
                            chat_id: chatId,
                            text: `${firstName} ’Å’°’∂ ’¢’∏’¨’∏÷Ä’´ ’¥’∏’ø ’°’∂’§’•’Ø’§’∏’ø’∂’•÷Ä’∂ ’©’°÷Ä’¥’°÷Å’æ’•’¨ ’ß ’¢’°÷Ä’•’∞’°’ª’∏’≤`
                        });

                    return res.status(200).send({statusText: "OK"});
                }

                if (sentMessage.includes('/joke')) {
                    const over18 = sentMessage.includes('/18+');
                    let text = sentMessage.replace('/joke', "");
                    text = text.replace('/18+', "");
                    await jokesService.addJoke(text, over18, 938812149);

                    await axios.post(`${url}${apiToken}/sendMessage`,
                        {
                            chat_id: chatId,
                            text: `${firstName} ’ã’°’∂ ’Å’•÷Ä ’°’∂’•’Ø’§’∏’ø’∂ ’Ω’ø’∏÷Ç’£’æ’•’¨’∏÷Ç÷Å ’¢’°÷Ä’•’∞’°’ª’∏’≤ ’°’æ’•’¨’°÷Å’æ’°’Æ ’ß`
                        });

                    return res.status(200).send({statusText: "OK"});
                }

                await axios.post(`${url}${apiToken}/sendMessage`,
                    {
                        chat_id: chatId,
                        text: `${firstName} ’ã’°’∂ ’°’∂’∞’°’Ω’Ø’°’∂’°’¨’´ ’∂’°’¥’°’Ø. ‘±’∂’•’Ø’§’∏’ø ’°’æ’•’¨’°÷Å’∂’¨’•’∏÷Ç ’∞’°’¥’°÷Ä /joke ÷á /18+, ‘±’¨’£’∏÷Ä’´’©’¥’´ ’°’∑’≠’°’ø’°÷Å’∂’•’¨’∏÷Ç ’∞’°’¥’°÷Ä /333`
                    });

                return res.status(200).send({statusText: "OK"});
            }
        } catch (e) {
            logger.error("Error", e);
            return res.status(200).send({statusText: "OK"});
        }
    }

    async function startJob(req, res) {
        try {
            await mainBotService.runJob();
            return res.send({status: "success"});
        } catch (err) {
            logger.error("Error in starting job ", err);
            return res.send({status: "error", response: err});
        }
    }

    //@Deprecated
    // async function init(req, res) {
    //     try {
    //         let url;
    //         if (req.query.q) {
    //             url = req.query.q;
    //         }
    //
    //         await mainBotService.connectUrlToTelegram(url);
    //         return res.send({status: "success"});
    //     } catch (e) {
    //         return res.send({
    //             status: "error",
    //             response: {
    //                 error_message: e
    //             }
    //         });
    //     }
    // }

    // async function initJob(req, res) {
    //     try {
    //         await mainBotService.initJob();
    //         return res.send({status: "success"});
    //     } catch (err) {
    //         logger.error("Error in initialization ", err);
    //         return res.send({status: "error", response: err});
    //     }
    // }

    // async function stopJob(req, res) {
    //     try {
    //         await mainBotService.stopJob();
    //         return res.send({status: "success"});
    //     } catch (err) {
    //         logger.error("Error in stop job ", err);
    //         return res.send({status: "error", response: err});
    //     }
    // }
};
